// 如果某个函数做的事情是创建一个别的线程或进程，
// 并与JS主线程并行地做一些事情，并在事情做完后通知JS主线程,则可以说是在异步
// JS是单线程运行，这决定了JS在执行完一段代码之前无法执行包括回调函数在内的别的代码。
// 也就是说，即使平行线程完成工作了，通知JS主线程执行回调函数了，回调函数也要等到JS主线程空闲时才能开始执行。
setTimeout(function () {
  console.log('world');
}, 1000);

console.log('hello');
// 可以看到，本来应该在1秒后被调用的回调函数因为JS主线程忙于运行其它代码，实际执行时间被大幅延迟。